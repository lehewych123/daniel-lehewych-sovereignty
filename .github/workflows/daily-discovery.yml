name: Daily Article Discovery

on:
  schedule:
    # 15:00 UTC == 11:00 America/New_York during DST
    - cron: '0 15 * * *'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: daily-discovery
  cancel-in-progress: true

jobs:
  discover:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Run discovery
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          SEARCH_ENGINE_ID: ${{ secrets.SEARCH_ENGINE_ID }}
        run: |
          node -v
          npm -v
          node src/discovery.js

      - name: Commit & push (only if changed)
        run: |
          git config user.name "automation"
          git config user.email "actions@users.noreply.github.com"
          git add data/
          git diff --staged --quiet || { git commit -m "chore(discovery): $(date -u +'%Y-%m-%d')"; git push; }

      # Read email subject + HTML body prepared by discovery.js
      - name: Read email summary
        id: summary
        run: |
          if [ -f data/email-summary.json ]; then
            subj=$(jq -r '.subject' data/email-summary.json)
          else
            subj="SOV-ARCH · $(date -u +'%Y-%m-%d') · (no summary file)"
          fi
          echo "subject=${subj}" >> $GITHUB_OUTPUT

      - name: Read email HTML body
        id: html
        run: |
          echo 'body<<EOF' >> $GITHUB_OUTPUT
          if [ -f data/notification.html ]; then
            cat data/notification.html >> $GITHUB_OUTPUT
          else
            echo "<p>No body generated.</p>" >> $GITHUB_OUTPUT
          fi
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: ${{ steps.summary.outputs.subject }}
          from: ${{ secrets.EMAIL_FROM }}
          to: ${{ secrets.EMAIL_TO }}
          secure: true
          convert_markdown: false
          html_body: ${{ steps.html.outputs.body }}
          attachments: |
            data/new-articles-full.json
            data/notification.md
            data/notification.txt
